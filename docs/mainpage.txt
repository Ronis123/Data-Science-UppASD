/**
@mainpage UppASD wiki/manual 

@section Introduction

This user guide/wiki describes the essential features of Uppsala Atomistic Spin Dynamics program (UppASD). The emphasis is on the input files necessary to run calculations using UppASD and the output files it generates. Some information concerning the analysis of data generated by the code is also given. The ASD method and our implementation of it is described in the article by Skubic et al.~\cite{Skubic2008}. The underlying theory is described in the articles by Antropov et al.~\cite{Antropov1996} and Garcia-Palacios and L\'azaro.~\cite{Garcia-Palacios1998} An old, yet remarkably lucid overview is also given by Watson et al.~\cite{Watson1969}. The program evolves the equations of motion for atomic magnetic moments in a solid. These take the form of the Landau-Lifshitz-Gilbert (LLG) equation,

\f[
  \frac{d\mathbf{m}_i}{dt}=-\gamma \mathbf{m}_i \times [\mathbf{B}_{i}+\mathbf{b}_{i}(t)]-\gamma \frac{\alpha}{m} \mathbf{m}_i \times (\mathbf{m}_i \times [\mathbf{B}_{i}+\mathbf{b}_{i}(t)]).
\f]
In this expression,\f$\gamma\f$ is the gyromagnetic ratio and \f$\mathbf{b}_{i}(t)\f$ is a stochastic magnetic field with a Gaussian distribution, the magnitude of which is related to the damping parameter \f$\alpha\f$, which eventually brings the system into thermal equilibrium. The typical time step for solving the differential equations is \f$\Delta t=0.1\f$ femtoseconds, i.e. 10\f$^{-16}\f$ seconds.

The effective field, \f$\mathbf{B}_i\f$, experienced by each atom \f${i}\f$ is given by 
\f[
  \mathbf{B}_i=-\frac{\partial {H}}{\partial \mathbf{m}_i}
\f]

where \f${H}\f$ is the exchange Hamiltonian,

\f[
  {H}=-\frac{1}{2}\sum_{i\neq j}J_{ij}\mathbf{m}_i\cdot\mathbf{m}_j
\f]
in which \f$i\f$ and \f$j\f$ are atomic indices, and \f$J_{ij}\f$ is the strength of the exchange interaction. This may be obtained from first-principles calculations, and often even inferred from experiment. It is also possible (and in many cases even essential) to include other terms to the Hamiltonian, such as anisotropies and external magnetic fields. As discussed below, the code is able to implement these with a high degree of flexibility. 

@section Installation 

The source code is distributed along with documentation and a growing set of examples. To install, uncompr
ess the file UppASD.tar.gz, enter the source directory, and compile with the supplied Ma
kefiles. If possible, compilation with the Intel Fortran compiler is recommended, using the command

    make -f Makefile.legacy

Other than the source directory, the current UppASD distribution also contains an examples directory, and a docs directory, in which this user manual is located, along with so
me programming notes for developers UppASDnotes.tex).

@section Program 

When run, UppASD essentially goes through three stages:

     - Initialization: the system is set up.
     - Initial phase: an optional stage in which the system is brought into thermal equilibrium, with limited data sampling.
     - Measurement phase: the system is evolved in time, with complete data sampling being made.

During the initialization phase, all the parameters necessary to describe the system of interest, such as 
its geometry, dimensions, exchange couplings and boundary conditions, are set up. In addition, the initial
 phase also sets the simulation parameters, such as the number of simulation steps to record data over, wh
ich SDE solver to use, and the temperature at which the simulation should be run.

The initial phase, which is optional, is typically performed in order to bring the system into thermal equ
ilibrium, so that the data recorded in the measurement phase is for a thermalized system. Obviously, if on
e is interested in out-of-equilibrium dynamics, then there is no need to perform this phase. The initial p
hase can either be performed using Spin Dynamics (SD), or the Metropolis or Heatbath Monte Carlo (MC) algo
rithms ~\cite{Binder2009}. The latter is convenient for ground state searches, provided the system is not 
too complex i.e. a spin glass).

During the measurement phase, the data sampling is performed. Simulations can be run in either MC or SD mode. In MC mode only magnetization averages and static correlation functions may be measured. In SD mode, a
 much richer set of observables are measured, including the dynamics structure factor.

@section Input

@subsection inpsd.dat

A file with the hardcoded name inpsd.dat is the main input file necessary to run UppASD. Contained in this file are also the names of the 
files containing the exchange interactions, the atomic positions, and the atomic moments. Although the names of these files is arbitrary, in this manual they are referred to as the jfile, posfile and momfile, respectively. Other optional files containing information 
such as the uniaxial anisotropy and the Dzyaloshinskii-Moriya vectors may also be included, as described below.

The input format is keyword based. The code is programmed to search for given keywords, and then read in the values that follow. If no keyword is given, a default value is set. An example inpsd.dat file for bcc Fe is shown below:


    simid bccFe100
    ncell     10        10        10       System size
    BC        P         P         P        Boundary conditions 
    cell      1.00000   0.00000   0.00000
              0.00000   1.00000   0.00000
              0.00000   0.00000   1.00000
    Sym       1                            Symmetry of lattice 

    posfile   ./posfile
    momfile   ./momfile
    exchange  ./jfile

    SDEalgh   1                            SDE solver
    Initmag   1                            Initial config of moments

    Temp      100.000         K            Temperature of the system
    damping   0.1                          damping parameter (alpha)
    Nstep     10000                        Number of time steps
    timestep  1.000e-16       s            Time step size

    do_avrg   Y                            Measure averages

    do_tottraj Y                           Measure moments
    tottraj_step   100


While the meaning of most of the entries in this particular example should be obvious, it is also clear that more information must be read in from external files for the system to be fully defined. These are:

@subsection posfile

The positions of the atoms in the unit cell are given in basis vector coordinates. These can be listed directly in the inpsd.dat file, but in our examples they are oftened read in from the posfile. For a bcc structure:

    1 1   0.000000  0.000000  0.000000
    2 1   0.500000  0.500000  0.500000


The first entry indicates the atom number, whereas the second one indicates the atom type. In this specific case there is only one atom type, namely Fe.

In the case of random alloy, two extra columns are required for atom component (third column) and its concentration (fourth column). In the case of
 a binary 50-50 AB alloy in bcc structure, the corresponding posfile looks like:

    1 1 1  0.50     0.000000  0.000000  0.000000
    1 1 2  0.50     0.000000  0.000000  0.000000
    2 1 1  0.50     0.500000  0.500000  0.500000
    2 1 2  0.50     0.500000  0.500000  0.500000


@subsection momfile

This file lists the magnetic moments of the atoms in the unit cell. Also, if the initmag entry is set to 3, the initial direction of the moments is read from this file. For bcc Fe:

    1 1 2.23 1.0 0.0 0.0 
    2 1 2.23 1.0 0.0 0.0 

The first entry indicates the atom number, the second entry the atom type, and the third entry indicates the magnitude of the magnetic moment in \f$\mu_{\mathrm{B}}\f$. The last three entries indicate the \f$x\f$, \f$y\f$, and \f$z\f$ components of the moment (assuming  initmag is set to 3).

For random alloy, magnetic moment of each type is needed. For binary AB alloy (like Fe-Ni) in bcc structure, the corresponding momfile :


    1 1 2.23 1.0 0.0 0.0
    1 2 0.60 1.0 0.0 0.0 
    2 1 2.23 1.0 0.0 0.0
    2 2 0.60 1.0 0.0 0.0 

  
@subsection exchange

This file lists the exchange couplings within the system. The content of this file depends somewhat on the symmetry of the system, and the number of atom types present. For the present bcc Fe example:


    1 1  0.5       0.5       0.5       1.33767
    1 1  1.0       0.0       0.0       0.75703
    1 1  1.0       1.0       0.0      -0.05975
    1 1  1.5       0.5       0.5      -0.08819


The first two entries indicate atom type \f$i\f$ and \f$j\f$. The third, fourth and fifth entries specify the coordination shell in basis vector coordinates. The last entry is the exchange energy in mRy. This jfile lists the \f$J_{ij}\f$ values for the first four coordination shells, and assumes a cubic symmetry (sym is set to 1). 

In systems with more than one atom type, the exchange parameters need to be defined between all atoms i.e. for 2 atoms the interactions a
re between the 1-1, 1-2, 2-1 and 2-2 atoms). Note also that if no symmetry is assumed  (sym is set to 0), then the $J_{ij}$  parameters  need to be specified for all neighbours, even those belonging to the same coordination shell.  
In case of random alloy, the jfile has two additional columns specifying interactions between atom types, like A-A, A-B, B-A and B-B interactions for a binary alloy. For a bcc binary alloy (model system with only NN interactions), the corresponding jfile looks like:


    1 1 1 1   0.5 0.5 0.5   1.00000
    1 1 1 2   0.5 0.5 0.5   0.50000
    1 1 2 1   0.5 0.5 0.5   0.50000
    1 1 2 2   0.5 0.5 0.5   0.20000


@subsection Input

The following entries are currently implemented in UppASD. Where applicable, the default entry setting is underlined.

 + simid The 8 character long simulation id. 
 + cell The three lattice vectors describing the cell. 
 + ncell Number of repetitions of the cell.
 + bc Boundary conditions (P=periodic, 0=free). 
 + natoms Number of atoms in one cell.
 + ntypes Number of types atoms in one cell.
 + sym Flag to determine the assumed symmetry of the system (0=none, 1=cubic, 2=2d cubic (in \f$xy\f$ plane), 3=hexagonal).  It is also possible to provide symmetry operations manually. This is done by setting sym to 4 and then create an additional input file sym.mat containing the number of symmetry operations followed by the operations in matrix form.  An example of sym.mat for only inversion symmetry can look like: 

    2 
    1.0000  0.0000 0.0000
    0.0000  1.0000 0.0000
    1.0000  0.0000 1.0000
    -1.0000  0.0000 0.0000
    0.0000  -1.0000 0.0000
    0.0000  0.0000 -1.0000

Do not forget the identity operation when using custom symmetry operations. The symmetry operations act on exchange, bq, and pd couplings, but not on dm or biqdm couplings.

 + maptype Flag to change between 1=Cartesian or 2=supercell coordinates for exchange coupling vectors.

 + posfile External file for the positions of the atoms in one cell, accompanied with the site number and type of the atom.
 + posfiletype Flag to change between C=Cartesian or D=direct coordinates in posfile.
 + momfile External file for magnitudes and directions of magnetic moments.
 + exchange External file for Heisenberg exchange couplings.
 + dm External file for Dzyaloshinskii-Moriya (DM) exchange coupling, which takes the form 
\f[
\mathcal{H}_{\mathrm{DM}} = \frac{1}{2} \sum_{i\neq j}\mathbf{D}_{ij} \left(\mathbf{m}_i \times \mathbf{m}_j\right),
\f]

where \f$D_{ij}\f$$ is the DM vector. The format is similar to that of the exchange file, i.e. in a 2d square lattice it may look something like:

    1 1  1.0000  0.0000 0.0000  2.50000  0.00000  0.00000
    1 1 -1.0000  0.0000 0.0000 -2.50000 -0.00000 -0.00000
    1 1  0.0000  1.0000 0.0000  0.00000  2.50000  0.00000
    1 1  0.0000 -1.0000 0.0000 -0.00000 -2.50000 -0.00000

The first two entries specify site numbers in the chemical unit cell. The third to fith entries specify the translation in terms of the lattice vec
tors, and the final three entries specify the DM vector. Note that in this case the maptype flag has been set to 2 in the input file.

 + pd External file for anisotropic symmetric exchange coupling (pd)

 + anisotropy External file for anisotropy strengths and directions. The single-ion, or uniaxial, anisotropy is defined as

\f[
  \mathcal{H}^{\mathrm{U}}_{\mathrm{ani}} = \sum_i K_1^{\mathrm{U}} (\hat{\mathbf{m}_i}\cdot\mathbf{e}_i)^2 + K_2^{\mathrm{U}} (\hat{\mathbf{m}_i}\
cdot\mathbf{e}_i)^4,
\f]

where \f$K_1\f$ and \f$K_2\f$ are the strength of the linear and four-fold term along an axis with direction $\mathbf{e}_i$. In a cubic system, one must also define the so-called cubic anisotropy, given by

\f[
  \mathcal{H}^{\mathrm{C}}_{\mathrm{ani}} = \sum_i K_1^{\mathrm{C}} (m_{i,x}^2m_{i,y}^2 + m_{i,y}^2m_{i,z}^2 + m_{i,z}^2m_{i,x}^2 ) + K_2^{\mathrm{
C}} m_{i,x}^2 m_{i,y}^2 m_{i,z}^2,
\f]

where \f$\mathbf{m} = (m_x, m_y, m_z)\f$. For bcc Fe, a plausible kfile might be:


    1   2   -0.001    0.000    0.0    1.0    0.0    0.1 
    2   2   -0.001    0.000    0.0    1.0    0.0    0.1    


The first entry lists the atom number, whereas the second entry indicates if the uniaxial (1), cubic (2) or both (7) anisotropies are to be mounted. The second and third entries list the strength of \f$K_1\f$ and \f$K_2\f$, respectively. The fifth to seventh entries indicate the components of the vector \f$\mathbf{e}_i\f$. Finally, in the instance of the second entry being set to 7, the final entry indicates the ratio between \f$K^{\mathrm{U}}_{\mathrm{ani}}\f$ and  \f$K^{\mathrm{C}}_{\mathrm{ani}}\f$.

 + do\_jtensor (0=off/1=on). This switch allows the exchange data to be read in according to the tensorial representation of the Heisenberg Hamiltonian, as implemented in the Vienna-Budapest SKKR code.~\cite{Udvardi2003} In this case, the exchange Hamiltonian is defined as

\f[
 \mathcal{H}_{\mathrm{Tens}} = \frac{1}{2} \sum_{i,j} \mathbf{m}_i \mathcal{J}_{ij} \mathbf{m}_j.
\f]

Here, \f$\mathcal{J}_{ij}=J_{ij}\mathcal{I} + \mathcal{J}^S_{ij} +  \mathcal{J}^A_{ij}\f$ is a \f$3 \times 3\f$ tensor (in which \f$\mathcal{I}\f$ is the unit matrix), the trace of which is equal to the exchange constant as defined in Eq.~(\ref{exchange}) by~\cite{Udvardi2003}

\f[
 J_{ij} = \frac{1}{3} \mathrm{Tr}(\mathcal{J}_{ij}).
\f]

In this formalism, the off-diagonal terms of the tensor are proportional to the components of the DM vector \f$\mathbf{D}_{ij}\f$ in Eq.~(\ref{DM}), as \f$D_{ij}^x=\frac{1}{2}(J_{ij}^{yz}-J_{ij}^{zy})\f$, \f$D_{ij}^y=\frac{1}{2}(J_{ij}^{xz}-J_{ij}^{zx})\f$ and \f$D_{ij}^z=\frac{1}{2}(J_{ij}^{xy}-J_{ij}^{yx})\f$. In order to define the first shell of exchange parameters in bcc Fe using this formalism, the exchange file would be changed to look as follows :

    0 0 1 2 0.00134 0.0 0.0 0.0 0.00134 0.0 0.0 0.0 0.00134
    0 0 2 1 0.00134 0.0 0.0 0.0 0.00134 0.0 0.0 0.0 0.00134

 + bq External file for biquadratic exchange coupling, which takes the form 

\f[
 \mathcal{H}_{\mathrm{bq}} = -\frac{1}{2}\sum_{i\neq j}B_{ij} \left( \mathbf{m}_i\cdot\mathbf{m}_j \right)^2.
  \label{bq}
\f]

 + biqdm External file for effective quadratic Dzyaloshinskii-Moriya coupling. For a motivation of this coupling, see Giovannetti et al., Phys. Rev. Lett. 106, 026401 (2011), which takes the form 

\f[
 \mathcal{H}_{\mathrm{biqdm}} = -\frac{1}{2}\sum_{i\neq j}F_{ij} \left( \mathbf{m}_i\times\mathbf{m}_j \right)^2.
  \label{biqdm}
\f]

The format is identical to that of the exchange file discussed above, with the values for the exchange couplings \f$J_{ij}\f$ replaced by the quadratic effective Dzyaloshinskii-Morya exchange couping \f$F_{ij}\f$.  

 + do\_dip Flag for enabling dipole-dipole interactions (0=off/1=on).
 + do\_prnstruct Flag to print lattice structure (0=off/1=on). Useful for checking if the system geometry and couplings are correctly set up.
 + do\_ralloy Flag to set if a random alloy is being simulated (0=off/1=on).
 + aunits Atomic units, i.e. set \f$k_B\f$, \f$\hbar\f$, ... \f$=1\f$ (Y/N). If this is switched on, the timestep in SD mode should be roughly 0.1\f$J_{ij}\f$. 
 + sdealgh Switch for choosing SDE solver (1=Midpoint, 4=Heun\_proper, 5=Depondt,11=Heun LLG+I). The default option runs the semi-implicit midpoint solver developed by Mentink et al.~\cite{Mentink2010} In this case, the timestep can be as large as  10\f$^{-16}\f$ seconds, but this should always be checked.
 + mensemble Number of ensembles to simulate. The default value is 1, but this may be increased to improve statistics, especially if investigating laterally confined systems, such as chains.
 + tseed Random number seed for the stochastic field simulating the fluctuations due to temperature. Default value is 1.
 + initmag Switch for setting up the initial configuration of the magnetic moments (1=Random distrubution, 2=Cone, 3=aligned along direction defined in momfile, 4=Read from restartfile).
 + restartfile External file containing stored snapshot from previous simulation (used when initmag=4). The format coincides with the format of the output file restart.simid.out.
 + mseed Random number seed for magnetic moments if initmag=3. Set to 1 by default.
 + theta0 If initmag=2, the magnetic moments are randomly distributed in a cone prescribed by this angle, and phi0. Set to 0 by default.
 + phi0 Cone angle for initmag=2. Set to 0 by default.
 + roteul Perform global rotation of magnetization. Set to 0 by default.
 + rotang Euler angles describing the rotation if roteul=1.
 + initexc Perform initial excitation of the spin system (N=none, I=Vacancies, R=Two magnon Raman scattering).
 + initconc Concentration of vacancies or two magnon spin scattering.
 + initneigh Neighbour index referring to the list of neighbours for Heisenberg exchange. Determines which spins to swap in two magnon spin scattering.

 + ip\_mode Mode for initial phase run (S=SD, M=Monte Carlo, H=Heat bath Monte Carlo, N=none).
 + ip\_temp Temperature for initial phase run if Monte Carlo (ip\_mode=M or H).
 + ip\_hfield External applied field (in units of Tesla) for initial phase run. This is given in Cartesian coordinates, e.g.,

    hfield   1.0   0.0   0.0

 + ip\_mcnstep Number of Metropolis sweeps over the system if ip\_mode=M or H.
 + ip\_nphase Number of initial phases to be done with SD. This must be followed by ip\_nphase lines containing number of steps, temperature, timestep and damping for each phase. An example (for an initialization with the temperature decreasing from 300 K to 10 K) can look like:

    ip_nphase 3
    20000 300.0 1.0d-16  0.1
    20000 100.0 1.0d-16  0.1
    30000 010.0 1.0d-16  0.1

 + ip\_mcanneal Number of initial phases to be done with MC. This must be followed by ip\_mcanneal lines containing number of steps and temperature for each phase.

 + mode Mode for measurement phase run (S=SD, M=Monte Carlo, H=Heat bath Monte Carlo).
 + temp Temperature for measurement phase.
 + hfield External applied field (in units of Tesla) for measurement phase. 
 + mcnstep Number of Monte Carlo sweeps (MCS) over the system if mode=M or H.
 + damping  Damping parameter \f$\alpha\f$ for SD measurement phase. Default value is 0.05.
 + timestep Time step between SD iterations. Unless aunits=Y, this should be set to a value between 10\f$^{-17}\f$ and 10\f$^{-15}\f$ seconds, depending on the system and SDE solver.
 + relaxtime Relaxation time in LLG+I equation (if sdealgh=11).

 + do\_avrg Sample and print average magnetization, and its higher order moments. (Y/N).
 + do\_proj\_avrg Sample and print type (i.e. sublattice) projected average moments. (Y/N/A).
 + do\_projch\_avrg Sample and print chemical (i.e. sublattice) projected average moments. (Y/N/A).
 + avrg\_step Time step between sampling of averages. Set to 100 by default.
 + avrg\_buff Number of samplings of averages to buffer between printing to file. Set to 10 by default.
 + do\_cumu Sample cumulants (Y/N) Automatically if Monte Carlo
 + cumu\_step Time step between sampling of cumulants. Set to 25 by default.
 + do\_tottraj Sample and print all trajectories (moments) in the system. (Y/N). Generates the (rather large) moment.simid.out file.
 + tottraj\_step Time step between samplings of moments. Set to 1000 by default.
 + tottraj\_buff Number of samplings of moments to buffer between printing to file. Set to 10 by default.
 + ntraj Number of individual trajectories to sample and print. Followed by ntraj lines describing atoms to sample, time step between samples and steps to buffer. Set to 0 by default.
 + set\_bpulse Add magnetic field pulse (0=no, $1-4$ for different shapes)
 + plotenergy Flag to enable the calculation of the energy of the system projected to the different components of the Hamiltonian. 
 + set\_landeg Flag for assigning different values of the gyromagnetic factor for the moments. Set to 0 by default.

 + do\_sc Flag to determine if spin correlations should be analysed (Q=yes, N=no, C=G(r) only). Setting this flag to Q measures the space- and time-displaced correlation function,

\f[
  C^k (\mathbf{r}-\mathbf{r'},t) = \langle m_{\mathbf{r}^k}(t) m_{\mathbf{r'}^k}(0) \rangle - \langle m_{\mathbf{r}^k}(t) \rangle \langle m_{\mathbf{r'}^k}(0) \rangle,
\f]

where the angular brackets signify an ensemble average and $k$ the Cartesian component, and its Fourier Transform, the dynamical structure factor
\f[
  S^k(\mathbf{q},\omega) = \frac{1}{\sqrt{2\pi}N} \sum_{\mathbf{r},\mathbf{r'}} e^{i\mathbf{q}\cdot(\mathbf{r}-\mathbf{r'})} \int_{-\infty}^{\infty} e^{i\omega t} C^k (\mathbf{r}-\mathbf{r'},t) dt,
\f]

which yields information concerning the spin waves present in the system.~\cite{Bergman2010} The quality of the measured data depends sensitively on the values of sc\_nstep, sc\_step, sc\_nsep. If the flag is set to C, the static correlation function G(r) its Fourier transform S(q) are measured. By locating the maximum of S(q) the ordering vector can be determined. q- file is automatically generated in this case.
 + do\_sc\_proj Flag to determine if type projected spin correlation should be analyzed (Y=yes, C=G(r),N=no).
 + do\_qt\_traj Flag to determine if the time evolution of the equal time spin correlation \f$S(\mathbf{q})\f$ should be written to file (Y=yes,N=no). This works only if do\_sc=C. The function \f$S(\mathbf{q})\f$ is sampled every sc\_sep time step and can give insight in the phase transitions in systems with more than one magnetic order parameter. Suggested use is to first determine the magnetic phase diagram and the associated ordering vectors by sampling \f$S(\mathbf{q})\f$ (as described above). The order parameters can then be specified in a qpoints file and followed in simulations where the systems is driven out of equilibrium by an external perturbation in form of an applied magnetic field, a heat pulse or a two-magnon Raman scattering excitation.
 + sc\_nstep Number of steps to sample.
 + sc\_step Number of time steps between each sampling.
 + sc\_sep Number of time steps between the start of subsequent spin correlation measurements.
 + qpoints Flag for for generation of q-point mesh necessary for \f$S(q,\omega)\f$ calculations. (F=external file, A=automatic, C=full cell, P=extended plane spanned by the first and third reciprocal lattice vector, D=external file with direct coordinates).
 + qfile External file containing the q point mesh for \f$S(q,\omega)\f$ calculations. 
 + do\_autocorr Flag to enable autocorrelation sampling (Y=yes, N=no).
 + acfile External file containing waiting times for the autocorrelation measurements.

 + do\_pol Sample and print average ferroelectric polarization (Y/N) according to the expression \f$P\propto = \gamma\sum_{i,j}\hat{\mathbf{e}}_{ij}\times(\mathbf{m}_i\times\mathbf{m}_j)\f$. Uses the neighbour lists set up for exchange but here the sum is performed up to a threshold max\_pol\_nn. For this construction to work, it is important to set the flag do\_sortcoup=N.
 + do\_sortcoup Flag to specify if the arrays of couplings should be sorted or not (Y=yes, N=no). Of importance for sampling of polarization.
 + max\_pol\_nn Number of neighbours to use when evaluating the polarization.
 + pol\_step Time step between sampling of polarization averages. Set to 100 by default.
 + pol\_buff Number of samplings of polarization averages to buffer between printing to file. Set to 10 by default.

@section Output

Depending on the settings chose in the input file, UppASD prints out a varying number of output files. These all share the suffix .out.

 + aniso1.simid.out

Occurs if the anisotropy is defined. Prints the anisotropy parameters for each atom in the format

\f$
  e_x,e_y,e_z,k_1,k_2
\f$

where the three first entries are the direction of the anisotropy axis.

 + averages.simid.out

Occurs if measurement phase is run in SD mode. Prints out the average magnetization as a function of simulation time, in the format
\f[
  step, m_x, m_y, m_z, m, \sigma(m)
\f]
where \f$step\f$ is the simulation time expressed in terms of the number of time steps, \f$m_x\f$, \f$m_y\f$ and \f$m_z\f$ are the components of the intensive average magnetization (i.e., \f$m_x=\frac{1}{N}\sum_i m_{x,i}\f$), \f$m=\sqrt{m_x^2+m_y^2+m_z^2}\f$, and so on. \f$\sigma(m)\f$ is the standard deviation of \f$m\f$ when the number of ensembles is larger than one.

 + biqdmdata.simid.out

Occurs if the effective quadratic DM interaction is defined. Prints out the effective quadratic DM coupling for each atom.  

 + bqdata.simid.out

Occurs if the bq interaction is defined. Prints out the bq coupling for each atom.

 + coord.simid.out

Occurs if do\_prnstruct is switched on. Prints out the coordinates of each moment in the system.  

 + cumulants.simid.out

Prints out the running time averages of the intensive magnetization and its higher order moments, in the format 
\f$
  step, m_t, m_t^2, m_t^4, U_4, \chi, C_v
\f$
 
where, \$U_4=1-\frac{1 m_t^4}{3 m_t^2}\$ is the fourth order `Binder' cumulant, useful for estimating transition temperatures ~\cite{Binder 2009}, \f$\chi\f$ is the magnetic susceptibility, and \f$C_V\f$ is the heat capacity.

 + dmdata.simid.out

Occurs if the DM interaction is defined. Prints out the DM coupling for each atom

 + inp.simid.out 

Extensive output of the values assigned to global variables after reading inpsd.dat and accompanying files.

 + moments.simid.out 

Occurs if the do\_tottraj flag is switched on. Prints the configuration of all magnetic moments at regular interval in time in the format 

\f$
  step, atom, m_{x,i}, m_{y,i}, m_{z,i}, m_{i}
\f$

Note that this file is very large. It is useful for creating animations of the evolution in time of the magnetic configuration of the system. Printed for ensemble nr 1.

 + polarization.simid.out

Prints out the average ferroelectric polarization as a function of simulation time, in the format

\f$
  step, p_x, p_y, p_z, p, \sigma(p)
\f$

where \f$step\f$ is the simulation time expressed in terms of the number of time steps, \f$p_x\f$, \f$p_y\f$ and \f$p_z\f$ are the components of the intensive average polarization (i.e., \f$p_x=\frac{1}{N}\sum_i p_{x,i},\ldots\f$, ) and \f$p=\sqrt{p_x^2+p_y^2+p_z^2}\f$. \f$\sigma(p)\f$ is the standard deviation of $p$ when the number of ensembles is larger than one.  
 + pddata.simid.out

Occurs if anisotropic exchange interaction pd interaction is defined. Prints out the effective pd couplings for each atom.

 + projavs.simid.out 

Occurs of the do\_projavs flag is switched on. Prints out the same thermodynamic averages printed in {averages.simid.out, but projected to each atom type sublattice. The format is also identical to averages.simid.out, except for the addition of a column indicating the sublattice.

 + projsqt.simid.out 

Occurs of the do\_sc\_proj flag is switched on. Prints out the same information printed in sqt.simid.out, but projected to each a tom type present in the system. This file can be very large.

 + projsqw.simid.out 

Occurs of the do\_sc\_proj flag is switched on. Prints out the same information printed in sqw.simid.out, but projected to each atom type present in the system. This file can be very large.

 + restart.simid.out

The magnetic configuration of the system at a specific point in time. Can be used as input when the initmag flag is set to 4.

 + trajectory.simid.out

The trajectory as a function of time step for an individual magnetic moment on format

\f$
  step, atom nr, m_{x,i},m_{y,i},m_{z,i},m_m,m_i
\f$

If the number ntraj is also defined to be greater than 1, the code prints out ntraj files named trajectory.simid.ntraj.out.

 + sq.simid.out

Occurs if the do\_sc flag is C. Prints out the static correlation function in reciprocal space $S(q)$ in the format
 \f$
nq,q_x,q_y,q_z,S^x(q),S^y(q),S^z(q),S(q)
\f$

 + sqt0.simid.out

Occurs if the do\_sc flag is C and the do\_qt\_traj flag is Y. Prints out the trajectory in time of the equal time correlation function \f$S(q)\f$ in the format
\f$
step,nq,q_x,q_y,q_z,S^x(q),S^y(q),S^z(q),S(q)
\f$

 + sra.simid.out

Occurs if the do\_sc flag is C. Prints out the static correlation function in real space \$S(r)\$ in the format
\f$
|r|,S^x(r),S^y(r),S^z(r),S(r)
\f$

 + sqt.simid.out 

Occurs of the do\_sc flag is switched on. Prints out the time-resolved structure factor $S(q,t)$ in the format 
\f$
  nstep, nq, \mathrm{Re}[S^x(q,t)], \mathrm{Im}[S^x(q,t)], \mathrm{Re}[S^y(q,t)], \mathrm{Im}[S^y(q,t)], \mathrm{Re}[S^z(q,t)], \mathrm{Im}[S^z(q,t)]
\f$

This file can be very large.

 + sqw.simid.out 

Occurs of the do\_sc flag is switched on. Prints out the frequency-resolved structure factor \f$S(q,\omega)\f$ in the format

\f$
  nq, q_x, q_y, q_z, nstep, S^x(q,\omega), S^y(q,\omega), S^z(q,\omega), S(q,\omega)
\f$

This file can be very large.

 + struct1.simid.out 

Occurs if do\_prnstruct is switched on. Prints out the neighbour coupling list for the exchange couplings of the system. Handy for checking if the system is set up correctly.

 + struct.simid.out
 
Occurs if do\_prnstruct is switched on. Prints out the Cartesian coordinates of the exchange couplings. The entries are grouped into coordination shells. Handy for checking if the system is set up correctly.

 + swdos.simid.out 

Occurs of the do\_sc flag is switched on. Prints out the \f$S(q,\omega)\f$ `density of states' as a function of energy.

 + totenergy.simid.out

Occurs if the plotenergy flag is switched on. Prints out the total energy of the system as a function of time step.

@section Examples
The best way to learn the code is to work through the examples in the directory examples. The current set of examples illustrates the range of the functionality of UppASD, and gives a feel for the data analysis that is necessary in order to interpret the results of the simulations.

@subsection bccFe

The bccFe directory contains the necessary input in order to simulate bcc Fe. There are a couple of Matlab scripts enclosed that plot quantities such as the average magnetization as a function of time. By varying input parameters such as the temperature, one may get a feel for how the se affect these observable quantities.

The bccFe-Tsweep directory contains very similar input to the bccFe directory. However, a small wrapper is included in order to run SD simulations as a function of temperature. This is often useful for checking the transition temperature of a given system. 

@subsection HeisenbergSpinChain

The HeisChain directory contains possibly the simplest system that can be set up with UppASD: a Heisenberg ferromagnetic chain. This example is set up to allow the spin wave spectrum of the system to be probed. Since the dispersion of this system can be derived analytically (as discus
sed any many textbooks concerning solid state physics), it is a handy example to get acquainted with spin correlations and dynamics in UppASD. 
By copying over the sqw.simid.out and inpsd.dat files into the Sqw directory, and running the sqw\_map.sh script, \f$S(q,\omega)\f$ as a function of $q$ is plotted, giving rise to the spin wave displersion.  The dynamics of spin waves have been studied in this way in the paper by Bergman {et al.~\cite{Bergman2010}

@subsection Two-dimensionalSystems

The 2d-systems directory contains a couple of two-dimensional systems: the surface simulating the Co/Cu(001) monolayer system (fcc 001), and the square lattice Heisenberg system (sc, which stands for simple cubic). In the latter example, the flag aunits is switched on. By running the simulation as a function of temperature, the magnetization can be benchmarked against data obtained from the ALPS software package (http://alps.comp-phys.org), which is contained in the scL64ALPS.dat file.

For both the fcc001 and sc examples, a directory Snapshots is included, that allows snapshots of the lattices to be taken. The scripts are written in VTK, and require the inp.simid.out, coord.simid.out and moment.simid.out files to work.

@subsection fcc-Co

Another very common structure in solid state physics is the fcc structure. This example allows the measurement of the dyamical structure factor, \f$S(q,\omega)\f$, for fcc Co, as in the Heisenberg spin chain example.

@subsection GaMnAs

The GaMnAs directory contains input data that sets up a GaMnAs dilute magnetic semiconductor.

@subsection RandomAlloy

The Ralloy directory contains input data necessary to set up a dilute random alloy.



\bibitem{Skubic2008}
B.~Skubic, J.~Hellsvik, L.~Nordstr{\"o}m, and O.~Eriksson.  A method for atomistic spin dynamics simulations: implementations and
  examples.  {\em J. Phys.: Condens. Matter}, 20:315203, 2008.

\bibitem{Antropov1996}
V.~P. Antropov, M.~I. Katsnelson, B.~N. Harmon, M.~van Schilfgaarde, and
  D.~Kusnezov.
\newblock Spin dynamics in magnets: Equation of motion and finite temperature
  effects.
\newblock {\em Phys. Rev. B}, 54:1019, 1996.

\bibitem{Garcia-Palacios1998}
J.~L. Garc\'\i{}a-Palacios and F.~J. L\'azaro.
\newblock Anisotropy effects on the nonlinear magnetic susceptibilities of
  superparamagnetic particles.
\newblock {\em Phys. Rev. B}, 55:1006, 1997.

\bibitem{Watson1969}
R.~E. Watson, M.~Blume, and G.~H. Vineyard.
\newblock Spin motions in a classical ferromagnet.
\newblock {\em Phys. Rev.}, 181:811, 1969.

\bibitem{Binder2009}
K.~Binder and D.~P. Landau.
\newblock {\em A {G}uide to {M}onte {C}arlo {S}imulation in {S}tatistical
  {P}hysics}.
\newblock Cambridge University Press, Cambridge, 3rd edition, 2009.

\bibitem{Udvardi2003}
L.~Udvardi, L.~Szunyogh, K.~Palot\'as, and P.~Weinberger.
\newblock First-principles relativistic study of spin waves in thin magnetic
  films.
\newblock {\em Phys. Rev. B}, 68:104436, 2003.

\bibitem{Mentink2010}
J.~H. Mentink, M.~V. Tretyakov, A.~Fasolino, M.~I. Katsnelson, and {\relax
  Th}.~Rasing.
\newblock Stable and fast semi-implicit integration of the stochastic
  {L}andau-{L}ifshitz equation.
\newblock {\em J. Phys.: Condens. Matter}, 22:176001, 2010.

\bibitem{Bergman2010}
A.~Bergman, A.~Taroni, L.~Bergqvist, J.~Hellsvik, B.~Hj{\"o}rvarsson, and
  O.~Eriksson.
\newblock Magnon softening in a ferromagnetic monolayer: A first-principles
  spin dynamics study.
\newblock {\em Phys. Rev. B}, 81:144416, 2010.



This wiki describes the essential features of Uppsala Atomistic Spin Dynamics program (UppASD). 



*/
